<h1 name="top" id="status_text" class="header animated"><a>projects</a></h1>
<div class="container-flex">
  <div class="project animated fadeIn" data-tilt>
    <img class="img" src="/images/spoticraft.webp" alt="Spoticraft">
    <a class="textiboi"
      href="https://modrinth.com/mod/spoticraft-2"
      target="_blank">spoticraft</a>
    <p class="textiboi">spotify in minecraft</p>
  </div>
  <div class="project animated fadeIn" data-tilt>
    <img class="img" src="/images/chatgpt.webp" alt="Leo AI">
    <a class="textiboi"
      href="https://ai.leonimust.com/" target="_blank">leo ai</a>
    <p class="textiboi">nice ui to use for n8n webhooks</p>
  </div>
  <div class="project animated fadeIn" data-tilt>
    <img class="img" src="/images/lol.webp" alt="Lol">
    <a class="textiboi"
      href="https://lol.leonimust.com/" target="_blank">lol champion list</a>
    <p class="textiboi">lol champion list with a nice ui</p>
  </div>
</div>
<div class="container-flex">
  <a href="./" onclick="loadPage('./', event)" style="margin-top: 15px;"
    class="textiboi nav-item">go back</a>
</div>

<style>
  .nav-item {
    padding: 8px 15px;
    position: relative;
    overflow: hidden;
    transition: color 0.3s ease;
    opacity: 0;
    animation: fadeIn 0.5s forwards;
    animation-delay: 0.5s;
  }
  
  .nav-item::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 1px;
    background-color: white;
    transition: width 0.3s ease;
  }
  
  .nav-item:hover::after {
    width: 100%;
  }

  /* Enhanced project cards */
  .project {
    opacity: 0;
    animation: slideInUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 20px;
    backdrop-filter: blur(10px);
    background: rgba(255, 255, 255, 0.02);
    position: relative;
    overflow: hidden;
  }

  .project::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transition: left 0.6s ease;
  }

  .project:hover::before {
    left: 100%;
  }

  .project:hover {
    transform: translateY(-10px) scale(1.02);
    border-color: rgba(255, 255, 255, 0.3);
    box-shadow: 
      0 20px 40px rgba(0, 0, 0, 0.4),
      0 0 20px rgba(255, 255, 255, 0.1);
  }

  .project:nth-child(1) { animation-delay: 0.1s; }
  .project:nth-child(2) { animation-delay: 0.2s; }
  .project:nth-child(3) { animation-delay: 0.3s; }

  .project .img {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    filter: grayscale(20%);
  }

  .project:hover .img {
    transform: scale(1.1);
    filter: grayscale(0%) brightness(1.1);
  }

  .project .textiboi {
    transition: all 0.3s ease;
    position: relative;
    z-index: 2;
  }

  .project:hover .textiboi {
    color: white;
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
  }

  @keyframes slideInUp {
    0% {
      opacity: 0;
      transform: translateY(30px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Tilt effect for projects */
  .project {
    transform-style: preserve-3d;
  }

  /* Glitch effect for project titles */
  .project a.textiboi {
    position: relative;
    display: inline-block;
  }

  .project:hover a.textiboi {
    animation: subtle-glitch 0.3s ease-in-out;
  }

  @keyframes subtle-glitch {
    0%, 100% { transform: translate(0); }
    25% { transform: translate(-1px, 1px); }
    50% { transform: translate(1px, -1px); }
    75% { transform: translate(-1px, -1px); }
  }

  @keyframes float {
    0% {
      transform: translateY(0px) rotate(0deg);
      opacity: 0.1;
    }
    50% {
      opacity: 0.3;
    }
    100% {
      transform: translateY(-100vh) rotate(360deg);
      opacity: 0;
    }
  }
</style>

<script>
  // 3D Tilt Effect
  document.addEventListener('DOMContentLoaded', () => {
    const projects = document.querySelectorAll('[data-tilt]');
    
    projects.forEach(project => {
      project.addEventListener('mousemove', (e) => {
        const rect = project.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        
        const centerX = rect.width / 2;
        const centerY = rect.height / 2;
        
        const rotateX = (y - centerY) / 10;
        const rotateY = (centerX - x) / 10;
        
        project.style.transform = `
          perspective(1000px) 
          rotateX(${rotateX}deg) 
          rotateY(${rotateY}deg) 
          translateZ(10px)
          scale(1.02)
        `;
      });
      
      project.addEventListener('mouseleave', () => {
        project.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) translateZ(0) scale(1)';
      });
    });
    
    // Parallax scroll effect
    window.addEventListener('scroll', () => {
      const scrolled = window.pageYOffset;
      projects.forEach((project, index) => {
        const rate = scrolled * -0.2;
        project.style.transform += ` translateY(${rate}px)`;
      });
    });
    
    // Add floating particles to projects page too
    setTimeout(createFloatingElements, 500);
  });
  
  function createFloatingElements() {
    const symbols = ['<', '>', '{', '}', '(', ')', ';', '/', '*'];
    
    for (let i = 0; i < 8; i++) {
      const element = document.createElement('div');
      element.textContent = symbols[Math.floor(Math.random() * symbols.length)];
      element.style.cssText = `
        position: fixed;
        color: rgba(255, 255, 255, 0.1);
        font-family: monospace;
        font-size: ${Math.random() * 20 + 10}px;
        pointer-events: none;
        z-index: 1;
        left: ${Math.random() * window.innerWidth}px;
        top: ${Math.random() * window.innerHeight}px;
        animation: float ${Math.random() * 10 + 15}s linear infinite;
      `;
      
      document.body.appendChild(element);
    }
  }
</script>